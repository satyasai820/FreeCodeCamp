{"version":3,"file":"static/js/117.bc7470c1.chunk.js","mappings":"oNAMA,MA+EMA,EAAqB,CACvBC,QCnFoBC,IACd,CACFC,KAAOC,EAAAA,EACPC,QAAUH,KDkFlB,EAAeI,EAAAA,EAASC,SAVCC,IACd,CACHN,KAAMM,EAAMC,QAAQP,QAQqBF,EAAjD,EAlFuBU,IAGhB,IAHiB,KACpBR,EAAI,QACJD,GACHS,EAGGJ,EAAAA,EAASK,WAAU,KACfC,GAAgB,GACjB,IAEH,MAAMA,EAAiBC,UAEnB,IACI,MAAMC,QAAgBC,EAAAA,EAAAA,KACtBC,QAAQC,IAAI,kCAAmCH,GAE/Cb,EAAQa,EACZ,CAEA,MAAOI,GAEHF,QAAQC,IAAI,wBAChB,GAIEE,EADOb,EAAAA,EAASc,YACCC,GACvBL,QAAQC,IAAI,YAAaE,GAEzB,MAAMG,EAAepB,EACrBc,QAAQC,IAAI,wBAAyBf,GAErC,MAAMqB,EAASD,EAAaE,QAAQC,GAASA,EAAKC,SAAWP,IAI7D,OAFAH,QAAQC,IAAI,qBAAuBM,IAI/BI,EAAAA,EAAAA,KAACrB,EAAAA,EAASsB,KAAI,CAACC,WAAS,EAACC,WAAY,GAAIC,eAAe,SAAQC,SAE3DT,EAAOU,KAAKR,IACTS,EAAAA,EAAAA,MAAC5B,EAAAA,EAASsB,KAAI,CAACO,GAAI,CAAEC,MAAO,CAAEC,GAAI,MAAOC,GAAI,MAAOC,GAAI,MAAOC,GAAI,OAASC,UAAW,UAAYT,SAAA,EAC/FL,EAAAA,EAAAA,KAACrB,EAAAA,EAASoC,WAAU,CAACZ,WAAY,EAAGa,WAAY,EAAGC,WAAW,6BAA6BT,GAAI,CAAEU,SAAU,CAAEC,GAAI,OAAQT,GAAI,OAAQC,GAAI,OAAQC,GAAI,OAAQC,GAAI,QAAUO,WAAY,KAAMf,SAAEP,EAAKuB,SACpMrB,EAAAA,EAAAA,KAACrB,EAAAA,EAASsB,KAAI,CAACO,GAAI,CAAEc,OAAQ,qBAAsBjB,UAC/CL,EAAAA,EAAAA,KAACrB,EAAAA,EAAS4C,KAAI,CAACC,KAAM1B,EAAK0B,KAAMf,MAAM,KAAKgB,OAAO,UAEtDzB,EAAAA,EAAAA,KAACrB,EAAAA,EAASsB,KAAI,CAACC,WAAS,EAACE,eAAe,SAAQC,UAC5CE,EAAAA,EAAAA,MAAC5B,EAAAA,EAASsB,KAAI,CAACO,GAAI,CAAEC,MAAO,CAAEU,GAAI,MAAOT,GAAI,MAAOE,GAAI,MAAOC,GAAI,QAAUR,SAAA,EACzEL,EAAAA,EAAAA,KAACrB,EAAAA,EAASoC,WAAU,CAACP,GAAI,CAAEM,UAAW,QAASY,MAAO,UAAWR,SAAU,CAAEC,GAAI,OAAQT,GAAI,OAAQG,GAAI,QAAUc,aAAc,OAAQV,WAAY,sBAAwBZ,SACxKP,EAAK8B,SAEV5B,EAAAA,EAAAA,KAACrB,EAAAA,EAASoC,WAAU,CAACP,GAAI,CAAEM,UAAW,QAASY,MAAO,UAAWR,SAAU,CAAEC,GAAI,OAAQT,GAAI,OAAQG,GAAI,QAAUc,aAAc,OAAQV,WAAY,sBAAwBZ,SACxKP,EAAK+B,SAEV7B,EAAAA,EAAAA,KAACrB,EAAAA,EAASoC,WAAU,CAACP,GAAI,CAAEM,UAAW,QAASY,MAAO,UAAWR,SAAU,CAAEC,GAAI,OAAQT,GAAI,OAAQG,GAAI,QAAUc,aAAc,OAAQV,WAAY,sBAAwBZ,SACxKP,EAAKgC,SAEV9B,EAAAA,EAAAA,KAACrB,EAAAA,EAASsB,KAAI,CAACO,GAAI,CAAEuB,WAAY,UAAWjB,UAAW,OAAQa,aAAc,OAAQK,QAAS,QAAS3B,UACnGL,EAAAA,EAAAA,KAACrB,EAAAA,EAASoC,WAAU,CAACkB,QAAQ,IAAIzB,GAAI,CAAES,WAAY,oBAAqBS,MAAO,UAAWR,SAAU,QAAUb,SAAEP,EAAKoC,oBAQ7H,IEpExB,MAuFM7D,EAAqB,CACvB8D,S,QACJ,GAEA,EAAexD,EAAAA,EAASC,SAXCC,IACd,CACHuD,MAAOvD,EAAMwD,SAASD,SASmB/D,EAAjD,EA3F2BU,IAA0B,IAAzB,MAAEqD,EAAK,SAAED,GAAUpD,EAE3CJ,EAAAA,EAASK,WAAU,KACfsD,GAAkB,GAEnB,IAEH,MAAMA,EAAmBpD,UACrB,IACI,MAAMqD,QAAgB5D,EAAAA,EAAS6D,mBAE/BL,EAASI,GAETlD,QAAQC,IAAI,yBAA0BiD,EAC1C,CACA,MAAOhD,GACHF,QAAQC,IAAI,kDAChB,GAIEmD,EAAW,CAAC,CAAEC,IAAK,KAAO,CAAEA,IAAK,KAAO,CAAEA,IAAK,KAAO,CAAEA,IAAK,KAAO,CAAEA,IAAK,KAAO,CAAEA,IAAK,KAAO,CAAEA,IAAK,KAAO,CAAEA,IAAK,KAAO,CAAEA,IAAK,KAAO,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,MAAQ,CAAEA,IAAK,OAGzuBlD,EADQb,EAAAA,EAASc,YACCC,GACxBL,QAAQC,IAAI,0BAA2B8C,GACvC,MAEMxC,EAFcwC,EAEOvC,QAAQC,GAASA,EAAKC,SAAWP,IAG5D,OAFAH,QAAQC,IAAI,8BAA+BM,IAGvCI,EAAAA,EAAAA,KAAA2C,EAAAA,SAAA,CAAAtC,UACIL,EAAAA,EAAAA,KAACrB,EAAAA,EAASsB,KAAI,CAACC,WAAS,EAACE,eAAe,SAAQC,UAC5CE,EAAAA,EAAAA,MAAC5B,EAAAA,EAASsB,KAAI,CAACO,GAAI,CAAEC,MAAO,CAAEE,GAAI,QAAUN,SAAA,CAEvCT,EAAOU,KAAKR,IACTE,EAAAA,EAAAA,KAAA2C,EAAAA,SAAA,CAAAtC,UACIE,EAAAA,EAAAA,MAAC5B,EAAAA,EAASiE,UAAS,CAACpC,GAAI,CAAEqC,aAAc,IAAKlB,aAAc,MAAOmB,UAAW,OAAQd,QAAS,KAAM3B,SAAA,EAChGE,EAAAA,EAAAA,MAAC5B,EAAAA,EAASoE,iBAAgB,CAACC,YAAYhD,EAAAA,EAAAA,KAACrB,EAAAA,EAASsE,eAAc,IAAK,gBAAc,iBAAiBvD,GAAG,gBAAgBc,GAAI,CAAES,WAAY,6BAA8BG,WAAY,MAAOM,MAAO,UAAWV,WAAY,MAAOE,SAAU,CAAEC,GAAI,OAAQN,GAAI,QAAU,UAAW,CAAEqC,gBAAiB,YAAc7C,SAAA,CAAC,KAACL,EAAAA,EAAAA,KAACrB,EAAAA,EAASoC,WAAU,CAACP,GAAI,CAAE2C,YAAa,MAAOC,UAAW,OAAQ/C,UAACL,EAAAA,EAAAA,KAACrB,EAAAA,EAAS4C,KAAI,CAACC,KAAK,iBAAiBf,MAAM,KAAKgB,OAAO,SAA6B,IAAE3B,EAAKuB,MAAM,QACtdd,EAAAA,EAAAA,MAAC5B,EAAAA,EAAS0E,iBAAgB,CAAAhD,SAAA,CAAC,KAAGP,EAAK8B,MAAM,QACzCrB,EAAAA,EAAAA,MAAC5B,EAAAA,EAAS0E,iBAAgB,CAAAhD,SAAA,CAAC,IAAEP,EAAK+B,MAAM,QACxC7B,EAAAA,EAAAA,KAACrB,EAAAA,EAAS2E,OAAM,CAAC9C,GAAI,CAAEmB,aAAc,OAAQV,WAAY,oBAAqBsC,cAAe,OAAQC,OAAQ,oBAAqBX,aAAc,MAAOK,gBAAiB,UAAWxB,MAAO,UAAW+B,WAAY,OAAQ,UAAW,CAAEP,gBAAiB,UAAWxB,MAAO,YAAcrB,SAAC,mBACxRL,EAAAA,EAAAA,KAACrB,EAAAA,EAASsB,KAAI,CAACC,WAAS,EAACkD,UAAW,EAAG5C,GAAI,CAAEkD,YAAa,CAAEvC,GAAI,QAAST,GAAI,QAAUL,SAClFoC,EAASnC,KAAKR,IACXE,EAAAA,EAAAA,KAAA2C,EAAAA,SAAA,CAAAtC,UACIL,EAAAA,EAAAA,KAACrB,EAAAA,EAASsB,KAAI,CAACa,UAAU,SAAShB,MAAI,EAACqB,GAAI,EAAGT,GAAI,EAAGG,GAAI,EAAGL,GAAI,CAAEgD,OAAQ,qBAAsBC,WAAY,OAAQ9B,aAAc,OAAQ,UAAW,CAAEuB,gBAAiB,YAAc7C,UAClLL,EAAAA,EAAAA,KAACrB,EAAAA,EAASoC,WAAU,CAACP,GAAI,CAAEc,OAAQ,QAASjB,SAAEP,EAAK4C,sBAU/E1C,EAAAA,EAAAA,KAACrB,EAAAA,EAASiE,UAAS,CAACpC,GAAI,CAAEqC,aAAc,IAAKlB,aAAc,OAAQmB,UAAW,QAAUzC,UACpFE,EAAAA,EAAAA,MAAC5B,EAAAA,EAASsB,KAAI,CAACC,WAAS,EAAAG,SAAA,EAEpBE,EAAAA,EAAAA,MAAC5B,EAAAA,EAASsB,KAAI,CAACO,GAAI,CAAEiD,WAAY,OAAQtD,WAAY,OAAQM,MAAO,CAAEU,GAAI,SAAUT,GAAI,MAAOE,GAAI,QAAUP,SAAA,EACzGL,EAAAA,EAAAA,KAACrB,EAAAA,EAASoC,WAAU,CAACP,GAAI,CAAEgD,OAAQ,oBAAqBN,gBAAiB,UAAWjC,WAAY,oBAAqByC,YAAa,OAAQrD,SAAC,2BAC3IL,EAAAA,EAAAA,KAACrB,EAAAA,EAASoC,WAAU,CAACP,GAAI,CAAES,WAAY,6BAA8BG,WAAY,MAAOM,MAAO,UAAWV,WAAY,MAAOE,SAAU,CAAEC,GAAI,OAAQN,GAAI,SAAWR,SAAC,qBAGzKE,EAAAA,EAAAA,MAAC5B,EAAAA,EAASsB,KAAI,CAAAI,SAAA,EACVL,EAAAA,EAAAA,KAACrB,EAAAA,EAAS0E,iBAAgB,CAAC7C,GAAI,CAAEU,SAAU,QAASb,SAAC,wEACrDL,EAAAA,EAAAA,KAACrB,EAAAA,EAAS0E,iBAAgB,CAAC7C,GAAI,CAAEU,SAAU,QAASb,SAAC,oGAS1E,IClDX,EA3BqBsD,KACjB,MAAMC,EAAWjF,EAAAA,EAASkF,cACpBC,EAAQC,aAAaC,QAAQ,eAQnC,OACIhE,EAAAA,EAAAA,KAAA2C,EAAAA,SAAA,CAAAtC,UACIL,EAAAA,EAAAA,KAACrB,EAAAA,EAASsF,IAAG,CAACnD,UAAW,SAAST,UAC9BL,EAAAA,EAAAA,KAACrB,EAAAA,EAAS2E,OAAM,CAACY,QAVPC,KAEdP,EADDE,EACU,QAEJ,UACT,EAKkDtD,GAAI,CAC1CkB,MAAO,QAASwB,gBAAiB,UACjCzC,MAAO,CAAEU,GAAI,SAAUT,GAAI,QAASC,GAAI,QAASC,GAAI,QAASC,GAAI,SAAY2C,OAAQ,oBAAqBX,aAAc,IAAK/B,UAAW,SAAUsC,UAAW,OAAQzB,aAAc,OAAQmB,UAAW,kCACvM,UAAW,CACPI,gBAAiB,YAEvB7C,UAACL,EAAAA,EAAAA,KAACrB,EAAAA,EAASoC,WAAU,CAACP,GAAI,CAAG+C,cAAc,OAAQtC,WAAY,oBAAqBC,SAAU,CAAEC,GAAI,OAAQT,GAAI,OAAQC,GAAI,OAAQC,GAAI,OAAQC,GAAI,QAAU,cAAe,CAAEuD,eAAgB,OAAQ1C,MAAO,YAAgBrB,SAAC,mDAGtO,ECKX,EAxBwBgE,KACpB,MAAMP,EAASC,aAAaC,QAAQ,eACpC,OACIhE,EAAAA,EAAAA,KAAA2C,EAAAA,SAAA,CAAAtC,UACIL,EAAAA,EAAAA,KAACrB,EAAAA,EAASsB,KAAI,CAACC,WAAS,EAACE,eAAe,SAASgD,UAAW,EAAE/C,UAC1DE,EAAAA,EAAAA,MAAC5B,EAAAA,EAASsB,KAAI,CAACO,GAAI,CAAEC,MAAO,CAAEC,GAAI,MAAOC,GAAI,MAAOC,GAAI,MAAOC,GAAI,OAASc,aAAc,QAAStB,SAAA,EAC/FL,EAAAA,EAAAA,KAACrB,EAAAA,EAASoC,WAAU,CAACE,WAAW,6BAA6BT,GAAI,CAAEU,SAAU,CAAEC,GAAI,QAAST,GAAI,OAAQE,GAAI,OAAQC,GAAI,QAAUO,WAAY,OAAQN,UAAW,SAAUa,aAAc,QAAStB,SAAC,aACnML,EAAAA,EAAAA,KAACsE,EAAkB,KACnBtE,EAAAA,EAAAA,KAACsE,EAAkB,KACnBtE,EAAAA,EAAAA,KAACsE,EAAkB,KACnBtE,EAAAA,EAAAA,KAACrB,EAAAA,EAASsB,KAAI,CAACC,WAAS,EAACE,eAAe,SAAQC,UAChDL,EAAAA,EAAAA,KAACrB,EAAAA,EAASsB,KAAI,CAACO,GAAI,CAAEC,MAAM,CAAEU,GAAG,MAAOR,GAAI,OAAQP,eAAe,UAAYC,SACxEyD,GAAS9D,EAAAA,EAAAA,KAACrB,EAAAA,EAASoC,WAAU,CAACP,GAAI,CAACgD,OAAO,kBAAmBvC,WAAW,oBAAqBH,UAAU,SAAUE,WAAW,OAAOkC,gBAAgB,UAAW,UAAU,CAACA,gBAAgB,UAAWxB,MAAM,YAAYrB,SAAC,gDAAmEL,EAAAA,EAAAA,KAAC2D,EAAY,cAQtT,E,wBChBX,MAkBA,EAlBeY,KAGf,MACM/E,GADOC,EAAAA,EAAAA,MACUC,GAGnB,OAFJL,QAAQC,IAAI,YAAYE,IAGhBe,EAAAA,EAAAA,MAAA,OAAKiE,MAAO,CAACtB,gBAAgB,WAAW7C,SAAA,EACpCL,EAAAA,EAAAA,KAACyE,EAAAA,EAAM,KACPzE,EAAAA,EAAAA,KAAC0E,EAAc,KACf1E,EAAAA,EAAAA,KAACqE,EAAe,KAChBrE,EAAAA,EAAAA,KAAC2E,EAAAA,EAAc,CAAClE,MAAM,MAAMgD,WAAW,QAAQxC,WAAa,6BAA6BC,SAAW,OAAQiC,YAAc,OAAOyB,QAAU,UAC3I5E,EAAAA,EAAAA,KAAC6E,EAAAA,EAAM,MACL,C","sources":["components/FirstComponent.js","Redux/Actions/Getdataaction.js","components/AccordionComponent.js","components/SecondButton.js","components/CourseComponent.js","pages/Detail.js"],"sourcesContent":["\r\nimport React from \"react\";\r\nimport { Setdata } from \"../Redux/Actions/Getdataaction\";\r\nimport { Getdata } from \"../Redux/Api/Getdata\";\r\nimport controls from \"./imports\";\r\n\r\nconst FirstComponent = ({\r\n    data,\r\n    Setdata\r\n}) => {\r\n\r\n\r\n    controls.useEffect(() => {\r\n        Getinformtaion();\r\n    }, [])\r\n\r\n    const Getinformtaion = async () => {\r\n\r\n        try {\r\n            const getdata = await Getdata();\r\n            console.log(\"i am get data in firstcomponent\", getdata);\r\n\r\n            Setdata(getdata);\r\n        }\r\n\r\n        catch (error) {\r\n\r\n            console.log(\"here Im getting error\");\r\n        }\r\n    }\r\n\r\n    const pram = controls.useParams();\r\n    const routename = pram.id;\r\n    console.log('routename', routename)\r\n\r\n    const extractedata = data;\r\n    console.log('this is extrated data', data);\r\n\r\n    const matter = extractedata.filter((item) => item.status === routename)\r\n\r\n    console.log(\"i am matter\", typeof (matter))\r\n\r\n    return (\r\n\r\n        <controls.Grid container paddingTop={10} justifyContent='center'>\r\n\r\n            {matter.map((item) => (\r\n                <controls.Grid sx={{ width: { sm: '75%', md: '70%', lg: '60%', xl: '50%' }, textAlign: 'center', }}>\r\n                    <controls.Typography paddingTop={5} lineHeight={1} fontFamily='\"Hack-ZeroSlash\",monospace' sx={{ fontSize: { xs: '30px', sm: '45px', md: '50px', lg: '45px', xl: '35px' }, fontWeight: 600 }}>{item.title}</controls.Typography>\r\n                    <controls.Grid sx={{ margin: '30px 0px 30px 0px' }}>\r\n                        <controls.Icon icon={item.icon} width=\"90\" height=\"90\" />\r\n                    </controls.Grid>\r\n                    <controls.Grid container justifyContent='center'>\r\n                        <controls.Grid sx={{ width: { xs: '95%', sm: '95%', lg: '70%', xl: '75%' } }}>\r\n                            <controls.Typography sx={{ textAlign: \"start\", color: '#1B1B32', fontSize: { xs: '17px', sm: '18px', xl: '16px' }, marginBottom: '20px', fontFamily: '\"Lato\", sans-serif', }}>\r\n                                {item.para1}\r\n                            </controls.Typography>\r\n                            <controls.Typography sx={{ textAlign: \"start\", color: '#1B1B32', fontSize: { xs: '17px', sm: '18px', xl: '16px' }, marginBottom: '20px', fontFamily: '\"Lato\", sans-serif', }}>\r\n                                {item.para2}\r\n                            </controls.Typography>\r\n                            <controls.Typography sx={{ textAlign: \"start\", color: '#1B1B32', fontSize: { xs: '17px', sm: '18px', xl: '16px' }, marginBottom: '20px', fontFamily: '\"Lato\", sans-serif', }}>\r\n                                {item.para3}\r\n                            </controls.Typography>\r\n                            <controls.Grid sx={{ background: '#D9EDF7', textAlign: 'left', marginBottom: '30px', padding: '10px' }}>\r\n                                <controls.Typography variant=\"p\" sx={{ fontFamily: '\"Lato\",sans-serif', color: '#317086', fontSize: '13px', }}>{item.note}</controls.Typography>\r\n                            </controls.Grid>\r\n\r\n                        </controls.Grid>\r\n                    </controls.Grid>\r\n                </controls.Grid>\r\n\r\n            ))}\r\n        </controls.Grid>\r\n\r\n\r\n );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.Reducer.data,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    Setdata,\r\n}\r\nexport default controls.connect(mapStateToProps, mapDispatchToProps)(FirstComponent);","import * as actionType from \"../Actions/actionType\"\r\n\r\n\r\nexport const Setdata = (data) => {\r\n    return{\r\n        type : actionType.SET_DATA,\r\n        payload : data,\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { SetData2 } from \"../Redux/Actions/Dropdataaction\";\r\nimport controls from \"./imports\";\r\n\r\nconst AccordionComponent = ({ data2, SetData2 }) => {\r\n\r\n    controls.useEffect(() => {\r\n        getAccordionData();\r\n\r\n    }, [])\r\n\r\n    const getAccordionData = async () => {\r\n        try {\r\n            const getData = await controls.AccordionGetData();\r\n\r\n            SetData2(getData);\r\n\r\n            console.log(\"accordion data is here\", getData);\r\n        }\r\n        catch (error) {\r\n            console.log(\"Here Im getting error in Accordion Component...\");\r\n        }\r\n\r\n    }\r\n\r\n    const gridData = [{ num: '1' }, { num: '2' }, { num: '3' }, { num: '4' }, { num: '5' }, { num: '6' }, { num: '7' }, { num: '8' }, { num: '9' }, { num: '10' }, { num: '11' }, { num: '12' }, { num: '13' }, { num: '14' }, { num: '15' }, { num: '16' }, { num: '17' }, { num: '18' }, { num: '19' }, { num: '20' }, { num: '21' }, { num: '22' }, { num: '23' }, { num: '24' }, { num: '25' }, { num: '26' }, { num: '27' }, { num: '28' }, { num: '29' }, { num: '30' }, { num: '31' }, { num: '32' }, { num: '33' }, { num: '34' }, { num: '35' }, { num: '36' }, { num: '37' }, { num: '38' }, { num: '39' }, { num: '40' }, { num: '41' }, { num: '42' }, { num: '43' }, { num: '44' }, { num: '45' }, { num: '46' }, { num: '47' }, { num: '48' }, { num: '49' }, { num: '50' }]\r\n\r\n    const param = controls.useParams();\r\n    const routename = param.id;\r\n    console.log('i am data2 in accordian', data2)\r\n    const extractData = data2;\r\n\r\n    const matter = extractData.filter((item) => item.status === routename);\r\n    console.log('Im accordion component data', matter);\r\n\r\n    return (\r\n        <>\r\n            <controls.Grid container justifyContent='center'>\r\n                <controls.Grid sx={{ width: { md: '80%' } }}>\r\n\r\n                    {matter.map((item) => (\r\n                        <>\r\n                            <controls.Accordion sx={{ borderRadius: '0', marginBottom: '5px', boxShadow: 'none', padding: 1.5 }}>\r\n                                <controls.AccordionSummary expandIcon={<controls.ExpandMoreIcon />} aria-controls=\"panel1-content\" id=\"panel1-header\" sx={{ fontFamily: '\"Hack-ZeroSlash\",monospace', fontWeight: '700', color: '#1B1B32', lineHeight: '1.5', fontSize: { xs: '20px', xl: '18px' }, '&:hover': { backgroundColor: '#D0D0D5' } }}> <controls.Typography sx={{ marginRight: '8px', marginTop: \"4px\" }}><controls.Icon icon=\"ph:circle-thin\" width=\"15\" height=\"15\" /></controls.Typography> {item.title} </controls.AccordionSummary>\r\n                                <controls.AccordionDetails>  {item.para1} </controls.AccordionDetails>\r\n                                <controls.AccordionDetails> {item.para2} </controls.AccordionDetails>\r\n                                <controls.Button sx={{ marginBottom: '20px', fontFamily: '\"Lato\",sans-serif', textTransform: 'none', border: '3px solid #1B1B32', borderRadius: '0px', backgroundColor: '#D0D0D5', color: '#1B1B32', marginLeft: '15px', '&:hover': { backgroundColor: '#1B1B32', color: '#F5F6F7' } }}>Start project</controls.Button>\r\n                                <controls.Grid container marginTop={3} sx={{ paddingLeft: { xs: '8vmin', sm: '0px' } }} >\r\n                                    {gridData.map((item) => (\r\n                                        <>\r\n                                            <controls.Grid textAlign='center' item xs={2} sm={1} xl={1} sx={{ border: '1px dashed #D0D0D5', marginLeft: '15px', marginBottom: '12px', '&:hover': { backgroundColor: '#D0D0D5' } }}>\r\n                                                <controls.Typography sx={{ margin: '10px' }}>{item.num}</controls.Typography>\r\n                                            </controls.Grid>\r\n                                        </>\r\n                                    ))}\r\n\r\n\r\n                                </controls.Grid>\r\n                            </controls.Accordion>\r\n                        </>\r\n                    ))}\r\n                    <controls.Accordion sx={{ borderRadius: '0', marginBottom: '80px', boxShadow: 'none', }}>\r\n                        <controls.Grid container>\r\n\r\n                            <controls.Grid sx={{ marginLeft: '10px', paddingTop: '10px', width: { xs: '49vmin', sm: '28%', lg: '26%' } }}>\r\n                                <controls.Typography sx={{ border: '1px solid #99C9FF', backgroundColor: '#99C9FF', fontFamily: '\"Lato\",sans-serif', paddingLeft: '5px' }}>Certification Project</controls.Typography>\r\n                                <controls.Typography sx={{ fontFamily: '\"Hack-ZeroSlash\",monospace', fontWeight: '700', color: '#1B1B32', lineHeight: '2.5', fontSize: { xs: '20px', xl: '18px' } }}> Survey Form</controls.Typography>\r\n                            </controls.Grid>\r\n\r\n                            <controls.Grid>\r\n                                <controls.AccordionDetails sx={{ fontSize: '18px' }}> This is one of the required projects to earn your certification. </controls.AccordionDetails>\r\n                                <controls.AccordionDetails sx={{ fontSize: '18px' }}> For this project, you will build a survey form to collect data from your users. </controls.AccordionDetails>\r\n\r\n                            </controls.Grid>\r\n                        </controls.Grid>\r\n\r\n                    </controls.Accordion>\r\n\r\n                </controls.Grid>\r\n            </controls.Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data2: state.Reducer2.data2,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    SetData2,\r\n}\r\n\r\nexport default controls.connect(mapStateToProps, mapDispatchToProps)(AccordionComponent);","import React from \"react\";\r\nimport controls from \"./imports\";\r\n\r\nconst SecondButton = () => {\r\n    const navigate = controls.useNavigate();\r\n    const token = localStorage.getItem('accessToken')\r\n    const ButtonClicked = () => {\r\n        if(token){\r\n            navigate('/home')\r\n        }else{\r\n        navigate('/signup')\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <controls.Box textAlign={'center'}>\r\n                <controls.Button onClick={ ButtonClicked} sx={{\r\n                    color: 'black', backgroundColor: \"#FEAC32\",\r\n                    width: { xs: '90vmin', sm: '450px', md: '450px', lg: '450px', xl: '400px', }, border: '3px solid #f79205', borderRadius: '0', textAlign: 'center', marginTop: '30px', marginBottom: '30px', boxShadow: '0px 4px 22px rgba(0, 0, 0, 0.1)',\r\n                    '&:hover': {\r\n                        backgroundColor: \"#FEAC32\",\r\n                    }\r\n                }}><controls.Typography sx={{  textTransform:'none', fontFamily: '\"Lato\",sans-serif', fontSize: { xs: '20px', sm: '20px', md: '20px', lg: '20px', xl: '18px' }, '& .nav-link': { textDecoration: 'none', color: 'inherit', }, }}> Sign in to Save your Process (it's free)</controls.Typography>\r\n                </controls.Button>\r\n            </controls.Box>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default SecondButton;","\r\nimport React from \"react\";\r\nimport AccordionComponent from \"./AccordionComponent\";\r\nimport SecondButton from \"./SecondButton\";\r\nimport controls from \"./imports\";\r\n\r\nconst CourseComponent = () => {\r\n    const token  = localStorage.getItem('accessToken')\r\n    return (\r\n        <>\r\n            <controls.Grid container justifyContent='center' marginTop={5} >\r\n                <controls.Grid sx={{ width: { sm: '75%', md: '70%', lg: '60%', xl: '50%' }, marginBottom: '20px' }} >\r\n                    <controls.Typography fontFamily='\"Hack-ZeroSlash\",monospace' sx={{ fontSize: { xs: '6vmin', sm: '35px', lg: '30px', xl: '30px' }, fontWeight: 'bold', textAlign: 'center', marginBottom: '30px' }}>Courses</controls.Typography>\r\n                    <AccordionComponent />\r\n                    <AccordionComponent />\r\n                    <AccordionComponent />\r\n                    <controls.Grid container justifyContent='center'> \r\n                    <controls.Grid sx={{ width:{ xs:'95%', md: '80%'}, justifyContent:'center', }}>\r\n                        { token ? (<controls.Typography sx={{border:'3px solid black', fontFamily:'\"Lato\",sans-serif', textAlign:'center', lineHeight:'25px',backgroundColor:'#D0D0D5', '&:hover':{backgroundColor:'#0A0A23', color:'#D0D0D5'}}}>Go to settings to claim your certification</controls.Typography>):(<SecondButton />)}\r\n                    </controls.Grid>\r\n                    </controls.Grid>\r\n                  \r\n\r\n                </controls.Grid>\r\n            </controls.Grid>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CourseComponent;","\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport FirstComponent from \"../components/FirstComponent\";\r\nimport CourseComponent from \"../components/CourseComponent\";\r\nimport BoxInformation from \"../components/BoxInformation\";\r\nimport Footer from \"../components/Footer\";\r\n\r\n\r\nconst Detail = () => {\r\n\r\n\r\nconst pram = useParams();\r\nconst routename = pram.id;\r\nconsole.log('routename',routename)\r\n\r\n    return(\r\n        <div style={{backgroundColor:'#F5F6F7'}} >\r\n            <Navbar/>\r\n            <FirstComponent />\r\n            <CourseComponent />\r\n            <BoxInformation width='45%' marginLeft='420px' fontFamily = '\"Hack-ZeroSlash\",monospace' fontSize = '25px'  marginRight = '90px' display = 'none' />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport  default Detail;"],"names":["mapDispatchToProps","Setdata","data","type","actionType","payload","controls","connect","state","Reducer","_ref","useEffect","Getinformtaion","async","getdata","Getdata","console","log","error","routename","useParams","id","extractedata","matter","filter","item","status","_jsx","Grid","container","paddingTop","justifyContent","children","map","_jsxs","sx","width","sm","md","lg","xl","textAlign","Typography","lineHeight","fontFamily","fontSize","xs","fontWeight","title","margin","Icon","icon","height","color","marginBottom","para1","para2","para3","background","padding","variant","note","SetData2","data2","Reducer2","getAccordionData","getData","AccordionGetData","gridData","num","_Fragment","Accordion","borderRadius","boxShadow","AccordionSummary","expandIcon","ExpandMoreIcon","backgroundColor","marginRight","marginTop","AccordionDetails","Button","textTransform","border","marginLeft","paddingLeft","SecondButton","navigate","useNavigate","token","localStorage","getItem","Box","onClick","ButtonClicked","textDecoration","CourseComponent","AccordionComponent","Detail","style","Navbar","FirstComponent","BoxInformation","display","Footer"],"sourceRoot":""}
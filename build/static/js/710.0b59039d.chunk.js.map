{"version":3,"file":"static/js/710.0b59039d.chunk.js","mappings":"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","sources":["FireBase.js","pages/SignUp.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { GithubAuthProvider, GoogleAuthProvider, getAuth } from 'firebase/auth';\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC35pERPeIl2hw_pBNkEGhANq7-x-9_1qA\",\r\n  authDomain: \"emailpasswordlogin-74e91.firebaseapp.com\",\r\n  projectId: \"emailpasswordlogin-74e91\",\r\n  databaseURL:'https://emailpasswordlogin-74e91-default-rtdb.firebaseio.com/',\r\n  storageBucket: \"emailpasswordlogin-74e91.appspot.com\",\r\n  messagingSenderId: \"403905714651\",\r\n  appId: \"1:403905714651:web:fe0079e3332855906feffe\"\r\n};\r\n\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth(app);\r\nexport const provider = new GoogleAuthProvider();\r\nexport const gitProvider = new GithubAuthProvider();","\r\nimport { Icon } from \"@iconify/react\";\r\nimport { AppBar, Box, Button, Grid, TextField, Typography } from \"@mui/material\";\r\nimport React, { useState} from \"react\";\r\nimport { auth, provider, gitProvider } from '../FireBase';\r\nimport { createUserWithEmailAndPassword, getAuth, signInWithEmailAndPassword, signInWithPopup } from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst SignUp = () => {\r\n\r\n    const [isSignUp, setIsSignUp] = useState(true);\r\n    const [email, setEmail] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordError, setPasswordError] = useState('');\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const showToast = (message, type = 'success') => {\r\n        localStorage.setItem('toastMessage', message);\r\n        localStorage.setItem('toastType', type);\r\n        toast[type](message, {\r\n            autoClose: 6000,\r\n            style: { fontSize: '12px', color:'black', fontWeight:'bold' },\r\n        });\r\n    };\r\n\r\n    const changeHandlerEmail = (e) => {\r\n        // setEmail(e.target.value);\r\n        const getEmail = e.target.value;\r\n        setEmail(getEmail);\r\n        const regEx = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        setEmailError(regEx.test(getEmail) ? '' : 'invalid email address');\r\n        console.log('trigred')\r\n\r\n    }\r\n    const changeHandlerPassword = (e) => {\r\n        const getPassword = e.target.value;\r\n        setPassword(getPassword);\r\n        setPasswordError(getPassword.length >= 6 ? '' : 'invalid password');\r\n    }\r\n\r\n\r\n\r\n    //email and password authentication\r\n    const handleButtonClick = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (email === '' && password === '') {\r\n            showToast('please enter the email and pssword')\r\n        } else {\r\n\r\n            if (emailError === '' && passwordError === '') {\r\n\r\n                if (isSignUp) {\r\n                    try {\r\n                        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n                        const user = userCredential.user;\r\n                        const token = await user.getIdToken();\r\n                        localStorage.setItem('accessToken', token);\r\n\r\n                        console.log('Token:', token);\r\n                        showToast('Data is successfully added....!','success');\r\n\r\n                        setEmail('');\r\n                        setPassword('');\r\n                        { token ? navigate('/home') : navigate('/signup') };\r\n\r\n                    } catch (error) {\r\n                        const errorMessage = error.message;\r\n                        showToast(\"You already have an account. Please log in.!\");\r\n                        console.log('Error:', errorMessage);\r\n                    }\r\n                }\r\n                else {\r\n                    try {\r\n                        const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n                        const user = userCredential.user;\r\n                        const token = await user.getIdToken();\r\n                        localStorage.setItem('accessToken', token);\r\n\r\n                        console.log('Token:', token);\r\n                        showToast('Data is successfully added....!');\r\n                        setEmail('');\r\n                        setPassword('');\r\n                        { token ? navigate('/home') : navigate('/signup') };\r\n                    } catch (error) {\r\n                        const errorMessage = error.message;\r\n                        showToast(\"please do sign-up first\");\r\n                        console.log('Error:', errorMessage);\r\n                    }\r\n\r\n                }\r\n            } else {\r\n                setIsSubmitted(true);\r\n                alert('invalid email and password...!');\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const toggleMode = () => {\r\n        setIsSignUp((prevMode) => !prevMode);\r\n    };\r\n\r\n\r\n    //google authentication\r\n    const googleAccount = () => {\r\n        signInWithPopup(auth, provider)\r\n            .then((result) => {\r\n                console.log(\"result\", result);\r\n                navigate('/home');\r\n                showToast('Successfully login with Google')\r\n                const token = result.user.accessToken;\r\n                localStorage.setItem('accessToken', token);\r\n                console.log('this is token google token man ', token);\r\n                \r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message, 'error occured')\r\n            })\r\n    }\r\n\r\n\r\n\r\n    //github authentication\r\n\r\n    const gitHubAccount = () => {\r\n        const auth = getAuth();\r\n        signInWithPopup(auth, gitProvider)\r\n            .then((result) => {\r\n                console.log(\"this is result\", result);\r\n                navigate('/home');\r\n                const token = result.user.accessToken;\r\n                localStorage.setItem('accessToken', token);\r\n                console.log(\"this is a github token\", token);\r\n            }).catch((err) => {\r\n                console.log(err.message, 'error occured')\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Box style={{ backgroundColor: '#D0D0D5', minHeight: '100vh' }}>\r\n                <AppBar position=\"static\" style={{ backgroundColor: '#0A0A23' }}>\r\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\" >\r\n                        <img src='./assets/images/FreeCodeCamp_logo.png' alt='s' width={{ xs: 100, md: 200 }} height={22} />\r\n                    </Box>\r\n                </AppBar>\r\n\r\n                <Grid container sx={{ justifyContent: 'center', marginTop: '30px' }}>\r\n\r\n                    <Grid sx={{ border: '3px solid black', width: { xs: '95%', sm: '55%', md: '40%', lg: '28%', xl: '21%', backgroundColor: 'white', justifyContent: 'center', alignItems: 'center' } }}>\r\n                        <Grid sx={{ textAlign: 'end' }}>\r\n                            <Icon onClick={() => navigate('/')} icon=\"mdi:cancel-bold\" width=\"25\" height=\"25\" />\r\n                        </Grid>\r\n                        <Grid sx={{ textAlign: 'center' }} >\r\n                            <img src=\"assets/images/SignUp_Logo.jpg\" alt=\"logo\" width={{ md: 200 }} height={20} />\r\n\r\n                        </Grid>\r\n                        <Grid sx={{ textAlign: 'center', margin: '30px 0px 40px 0px' }}>\r\n                            <Typography fontFamily={'Lato,Arial'} fontWeight={400}> Log in to freeCodeCamp</Typography>\r\n                            <Typography fontFamily={'Lato,Arial'} fontWeight={400}  >Learn</Typography>\r\n                        </Grid>\r\n                        <Grid container sx={{ justifyContent: 'center' }}>\r\n                            <Grid sx={{\r\n                                border: '3px solid #c2c8d0', width: '80%', display: 'flex', height: '40px', alignItems: 'center', marginBottom: '10px',\r\n                                '&:hover': {\r\n                                    backgroundColor: 'lightgrey',\r\n                                }\r\n                            }} onClick={googleAccount}>\r\n                                <Typography sx={{ padding: '5px 9px 0px 15px' }}> <Icon icon=\"devicon:google\" width=\"15\" height=\"15\" /></Typography>\r\n\r\n                                <Typography fontFamily={'Lato,Arial'} sx={{ fontSize: '13px', lineHeight: '25px' }}> Continue with Google</Typography>\r\n                            </Grid>\r\n                            <Grid sx={{\r\n                                border: '3px solid #c2c8d0', width: '80%', display: 'flex', height: '40px', alignItems: 'center', marginBottom: '10px',\r\n                                '&:hover': {\r\n                                    backgroundColor: 'lightgrey',\r\n                                }\r\n                            }} onClick={gitHubAccount}>\r\n                                <Typography sx={{ padding: '5px 9px 0px 15px' }}> <Icon icon=\"devicon:github\" width=\"18\" height=\"18\" /></Typography>\r\n\r\n                                <Typography fontFamily={'Lato,Arial'} sx={{ fontSize: '13px', lineHeight: '25px' }}> Continue with Git Hub</Typography>\r\n                            </Grid>\r\n                            <Grid sx={{\r\n                                border: '3px solid #c2c8d0', width: '80%', display: 'flex', height: '40px', alignItems: 'center', marginBottom: '10px',\r\n                                '&:hover': {\r\n                                    backgroundColor: 'lightgrey',\r\n                                }\r\n                            }}>\r\n                                <Typography sx={{ padding: '5px 9px 0px 15px' }}> <Icon icon=\"devicon:apple\" width=\"18\" height=\"18\" /></Typography>\r\n\r\n                                <Typography fontFamily={'Lato,Arial'} sx={{ fontSize: '13px', lineHeight: '25px' }}> Continue with Apple</Typography>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid container justifyContent='center' marginBottom={3}>\r\n                            <Grid sx={{ width: '35%' }} >\r\n                                <hr></hr>\r\n                            </Grid>\r\n                            <Grid>\r\n                                <Typography fontSize={10} sx={{ fontSize: '9px', padding: '4px 8px 0px 8px ' }}>OR</Typography>\r\n                            </Grid>\r\n                            <Grid sx={{ width: '35%' }} >\r\n                                <hr></hr>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container justifyContent='center' marginBottom={3}>\r\n                            <Grid marginBottom={1}>\r\n                                <TextField id=\"outlined-basic\" label=\"Email address\" size=\"small\" variant='outlined' type=\"email\" name=\"email\" value={email} onChange={changeHandlerEmail} error={isSubmitted && Boolean(emailError)} helperText={isSubmitted && emailError} />\r\n                            </Grid>\r\n                            <Grid>\r\n                                <TextField id=\"outlined-basic\" label=\"Password\" size=\"small\" variant='outlined' type=\"password\" name=\"password\" value={password} onChange={changeHandlerPassword} error={isSubmitted && Boolean(passwordError)} helperText={isSubmitted ? passwordError : ''} />\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container justifyContent='center'>\r\n                            <Grid >\r\n                                <Button variant=\"container\" sx={{ backgroundColor: '#f1be32', borderRadius: '0px', color: 'black', textTransform: 'none', fontFamily: '', width: '230px', marginBottom: '20px', '&:hover': { backgroundColor: '#f1be32' } }} onClick={handleButtonClick}>\r\n                                    <Typography sx={{ fontSize: '13px' }}> {isSignUp ? 'Countinue with Email' : 'Login with Email'}  </Typography></Button>\r\n                                <Typography fontFamily='Lato,Arial' sx={{ fontSize: '13px', textAlign: 'center', marginBottom: '20px' }}> {isSignUp ? 'Already have an account?' : '   Don`t have an account yet?'}  <span style={{ color: '#635DFF', fontWeight: 'bold' }} onClick={toggleMode} >{isSignUp ? 'Log In' : ' Sign up'}</span></Typography>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container sx={{ marginTop: { xs: '60px', justifyContent: 'center' } }}>\r\n                    <Grid>\r\n                        <Typography fontFamily='Lato,Arial' textAlign='center' sx={{ fontSize: { xs: '13.5px', lg: '13px', xl: '10.5px' }, color: '#3B3B4F', lineHeight: '2' }}>freeCodeCamp is free and your account is private by default. We use your email address to connect you to your account.</Typography>\r\n                        <Typography fontFamily='Lato,Arial' textAlign='center' sx={{ fontSize: { xs: '13.5px', lg: '13px', xl: '10.5px' }, color: '#3B3B4F', lineHeight: '2' }}>You must be at least 13 years old to create an account on freeCodeCamp.</Typography>\r\n                        <Typography fontFamily='Lato,Arial' textAlign='center' sx={{ fontSize: { xs: '13.5px', lg: '13px', xl: '10.5px' }, color: '#3B3B4F', lineHeight: '2' }}>By continuing, you indicate that you have read and agree to freeCodeCamp.org's <span style={{ color: '#002EAD' }}>Terms of Service</span>and<span style={{ color: '#002EAD' }}>Privacy Policy</span>.</Typography>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n\r\n            </Box>\r\n            <ToastContainer />\r\n        </>\r\n\r\n\r\n    );\r\n}\r\nexport default SignUp;"],"names":["app","initializeApp","apiKey","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","auth","getAuth","provider","GoogleAuthProvider","gitProvider","GithubAuthProvider","SignUp","isSignUp","setIsSignUp","useState","email","setEmail","emailError","setEmailError","password","setPassword","passwordError","setPasswordError","isSubmitted","setIsSubmitted","navigate","useNavigate","showToast","message","type","arguments","length","undefined","localStorage","setItem","toast","autoClose","style","fontSize","color","fontWeight","_jsxs","_Fragment","children","Box","backgroundColor","minHeight","_jsx","AppBar","position","display","justifyContent","alignItems","height","src","alt","width","xs","md","Grid","container","sx","marginTop","border","sm","lg","xl","textAlign","Icon","onClick","icon","margin","Typography","fontFamily","marginBottom","googleAccount","signInWithPopup","then","result","console","log","token","user","accessToken","catch","err","padding","lineHeight","gitHubAccount","TextField","id","label","size","variant","name","value","onChange","e","getEmail","target","test","error","Boolean","helperText","getPassword","Button","borderRadius","textTransform","async","preventDefault","createUserWithEmailAndPassword","getIdToken","errorMessage","signInWithEmailAndPassword","alert","toggleMode","prevMode","ToastContainer"],"sourceRoot":""}